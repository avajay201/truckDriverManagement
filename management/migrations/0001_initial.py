# Generated by Django 5.2 on 2025-05-07 12:20

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_id', models.CharField(max_length=20, unique=True, verbose_name='Client ID')),
                ('name', models.CharField(max_length=100)),
                ('contact_person', models.CharField(max_length=100)),
                ('phone_number', models.CharField(max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('email', models.EmailField(max_length=254)),
                ('address', models.TextField()),
                ('city', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=50)),
                ('postal_code', models.CharField(max_length=20)),
                ('country', models.CharField(max_length=50)),
                ('tax_id', models.CharField(blank=True, max_length=50)),
                ('notes', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Client',
                'verbose_name_plural': 'Clients',
                'ordering': ['client_id'],
            },
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('route_id', models.CharField(max_length=20, unique=True, verbose_name='Route ID')),
                ('name', models.CharField(max_length=100)),
                ('start_location', models.CharField(max_length=100)),
                ('end_location', models.CharField(max_length=100)),
                ('distance', models.DecimalField(decimal_places=2, help_text='Distance in kilometers', max_digits=10)),
                ('estimated_duration', models.DurationField(help_text='Estimated duration in hours and minutes')),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Route',
                'verbose_name_plural': 'Routes',
                'ordering': ['route_id'],
            },
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicle_id', models.CharField(max_length=20, unique=True, verbose_name='Vehicle ID')),
                ('type', models.CharField(choices=[('TRUCK', 'Truck'), ('VAN', 'Van'), ('BUS', 'Bus'), ('CAR', 'Car'), ('MOTORCYCLE', 'Motorcycle'), ('OTHER', 'Other')], max_length=20)),
                ('make', models.CharField(max_length=50)),
                ('model', models.CharField(max_length=50)),
                ('year', models.PositiveIntegerField()),
                ('license_plate', models.CharField(max_length=20, unique=True)),
                ('vin', models.CharField(max_length=17, unique=True, verbose_name='VIN')),
                ('capacity', models.DecimalField(decimal_places=2, help_text='Capacity in tons or passengers', max_digits=10)),
                ('capacity_unit', models.CharField(choices=[('TONS', 'Tons'), ('PASSENGERS', 'Passengers')], default='TONS', max_length=10)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('MAINTENANCE', 'Under Maintenance'), ('INACTIVE', 'Inactive'), ('RETIRED', 'Retired')], default='ACTIVE', max_length=20)),
                ('purchase_date', models.DateField()),
                ('purchase_price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('current_mileage', models.PositiveIntegerField(help_text='Current mileage in kilometers')),
                ('fuel_type', models.CharField(choices=[('DIESEL', 'Diesel'), ('PETROL', 'Petrol/Gasoline'), ('ELECTRIC', 'Electric'), ('HYBRID', 'Hybrid'), ('CNG', 'CNG'), ('LPG', 'LPG')], max_length=20)),
                ('fuel_efficiency', models.DecimalField(decimal_places=2, help_text='Fuel efficiency in km/l or km/kWh', max_digits=5)),
                ('insurance_expiry', models.DateField()),
                ('registration_expiry', models.DateField()),
                ('notes', models.TextField(blank=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='vehicles/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Vehicle',
                'verbose_name_plural': 'Vehicles',
                'ordering': ['vehicle_id'],
            },
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('driver_id', models.CharField(max_length=20, unique=True, verbose_name='Driver ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('phone_number', models.CharField(max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('email', models.EmailField(max_length=254)),
                ('address', models.TextField()),
                ('date_of_birth', models.DateField()),
                ('license_number', models.CharField(max_length=50, unique=True)),
                ('license_type', models.CharField(choices=[('A', 'Class A - Heavy Vehicles'), ('B', 'Class B - Medium Vehicles'), ('C', 'Class C - Light Vehicles'), ('D', 'Class D - Passenger Vehicles'), ('E', 'Class E - Special Vehicles')], max_length=1)),
                ('license_expiry', models.DateField()),
                ('date_hired', models.DateField()),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('ON_LEAVE', 'On Leave'), ('INACTIVE', 'Inactive'), ('TERMINATED', 'Terminated')], default='ACTIVE', max_length=20)),
                ('emergency_contact_name', models.CharField(max_length=100)),
                ('emergency_contact_phone', models.CharField(max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('notes', models.TextField(blank=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='drivers/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Driver',
                'verbose_name_plural': 'Drivers',
                'ordering': ['driver_id'],
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schedule_id', models.CharField(max_length=20, unique=True, verbose_name='Schedule ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('departure_time', models.TimeField()),
                ('arrival_time', models.TimeField()),
                ('frequency', models.CharField(choices=[('DAILY', 'Daily'), ('WEEKLY', 'Weekly'), ('BIWEEKLY', 'Bi-weekly'), ('MONTHLY', 'Monthly'), ('CUSTOM', 'Custom')], max_length=20)),
                ('days_of_week', models.CharField(blank=True, help_text="For weekly schedules, comma-separated days (e.g., 'MON,WED,FRI')", max_length=20)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('COMPLETED', 'Completed')], default='ACTIVE', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='management.driver')),
                ('route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='management.route')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='management.vehicle')),
            ],
            options={
                'verbose_name': 'Schedule',
                'verbose_name_plural': 'Schedules',
                'ordering': ['schedule_id'],
            },
        ),
        migrations.CreateModel(
            name='Shipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shipment_id', models.CharField(max_length=20, unique=True, verbose_name='Shipment ID')),
                ('description', models.TextField()),
                ('weight', models.DecimalField(decimal_places=2, help_text='Weight in kg', max_digits=10)),
                ('volume', models.DecimalField(blank=True, decimal_places=2, help_text='Volume in cubic meters', max_digits=10, null=True)),
                ('pickup_location', models.CharField(max_length=200)),
                ('delivery_location', models.CharField(max_length=200)),
                ('pickup_date', models.DateField()),
                ('pickup_time', models.TimeField()),
                ('delivery_date', models.DateField()),
                ('delivery_time', models.TimeField()),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('IN_TRANSIT', 'In Transit'), ('DELIVERED', 'Delivered'), ('CANCELLED', 'Cancelled'), ('DELAYED', 'Delayed')], default='PENDING', max_length=20)),
                ('tracking_number', models.CharField(max_length=50, unique=True)),
                ('special_instructions', models.TextField(blank=True)),
                ('is_hazardous', models.BooleanField(default=False)),
                ('is_fragile', models.BooleanField(default=False)),
                ('is_perishable', models.BooleanField(default=False)),
                ('requires_refrigeration', models.BooleanField(default=False)),
                ('price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('payment_status', models.CharField(choices=[('PENDING', 'Pending'), ('PAID', 'Paid'), ('PARTIAL', 'Partially Paid'), ('OVERDUE', 'Overdue')], default='PENDING', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shipments', to='management.client')),
                ('schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shipments', to='management.schedule')),
            ],
            options={
                'verbose_name': 'Shipment',
                'verbose_name_plural': 'Shipments',
                'ordering': ['shipment_id'],
            },
        ),
        migrations.CreateModel(
            name='Maintenance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maintenance_id', models.CharField(max_length=20, unique=True, verbose_name='Maintenance ID')),
                ('maintenance_type', models.CharField(choices=[('ROUTINE', 'Routine Maintenance'), ('REPAIR', 'Repair'), ('INSPECTION', 'Inspection'), ('EMERGENCY', 'Emergency Repair'), ('OTHER', 'Other')], max_length=20)),
                ('description', models.TextField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('mileage_at_service', models.PositiveIntegerField()),
                ('cost', models.DecimalField(decimal_places=2, max_digits=12)),
                ('service_provider', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('SCHEDULED', 'Scheduled'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled')], default='SCHEDULED', max_length=20)),
                ('parts_replaced', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_records', to='management.vehicle')),
            ],
            options={
                'verbose_name': 'Maintenance Record',
                'verbose_name_plural': 'Maintenance Records',
                'ordering': ['maintenance_id'],
            },
        ),
    ]
